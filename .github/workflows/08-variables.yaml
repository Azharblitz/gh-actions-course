name: 08-using-variables

on:
    push:
    workflow_dispatch:
env:
    WORKFLOW_VAR: 'Iam Workflow variable'
    OVERWRITTEN: 'I am Workflow variable to be overwritten'
    UNDEFINED_VAR: ${{ vars.UNDEFINED_VAR || 'default'}}  # This variable does not exist
jobs:
    echo:
        runs-on: ubuntu-latest
        env:
            JOB_VAR: 'Iam job variable'
            OVERWRITTEN: 'I am job variable to be overwritten'
        steps:
        - name: Print Env variables
          env:
              STEP_VAR: 'Iam step variable'
              step_var2: 'Iam another step variable'
          run: |
              echo "Step En Var: ${{ env.STEP_VAR }}"
              echo "Step En Var2: $step_var2"
              echo "Workflow En Var: ${{ env.WORKFLOW_VAR }}"
              echo "Overwritten Workflow En Var: ${{ env.OVERWRITTEN }}"

        - name: Print overwritten variable
          env:
              OVERWRITTEN: 'I am step variable'
          run: |
              echo "Workflow En Var: ${{ env.OVERWRITTEN }}" 
        
    echo-2:
        runs-on: ubuntu-latest
        steps:
        - name: Print Env variables - ORDER TEST
          run: |
              echo "Org Var: ${{ vars.ORG_VAR || env.UNDEFINED_VAR}}"
              echo "Org Overwritten Var 1: ${{ vars.OVERWRITTEN_VAR }}"
              echo "Repo Var: ${{ vars.REPOSITORY_VAR }}"
    
    echo-prod:
        runs-on: ubuntu-latest
        environment: prod
        steps:
        - name: Print Env variables - PROD
          run: |
              echo "Org Var: ${{ vars.ORG_VAR || env.UNDEFINED_VAR}}"
              echo "Prod Overwritten Var : ${{ vars.OVERWRITTEN_VAR }}"
              echo "Repo Var: ${{ vars.REPOSITORY_VAR }}"
              echo "Prod Environment Var : ${{ vars.TARGET_VAR }}"
